package generaciondefactura;

public class generaciondefacturaStepDefinitions {
	
	@Given("^El cajero generara una factura de cobro.$")
	public void El_cajero_generara_una_factura_de_cobro() throws Throwable {
	    // Express the Regexp above with the code you wish you had
	    throw new PendingException();
	}

	@When("^Hay pedido.$")
	public void Hay_pedido() throws Throwable {
	    // Express the Regexp above with the code you wish you had
	    throw new PendingException();
	}

	@Then("^Generar factura de cobro.$")
	public void Generar_factura_de_cobro() throws Throwable {
	    // Express the Regexp above with the code you wish you had
	    throw new PendingException();
	}

	@When("^No hay pedido.$")
	public void No_hay_pedido() throws Throwable {
	    // Express the Regexp above with the code you wish you had
	    throw new PendingException();
	}

	@Then("^Notificar que no hay pedido.$")
	public void Notificar_que_no_hay_pedido() throws Throwable {
	    // Express the Regexp above with the code you wish you had
	    throw new PendingException();
	}

	@When("^La factura incluye propina.$")
	public void La_factura_incluye_propina() throws Throwable {
	    // Express the Regexp above with the code you wish you had
	    throw new PendingException();
	}

	@Then("^Generar factura de cobro con propina.$")
	public void Generar_factura_de_cobro_con_propina() throws Throwable {
	    // Express the Regexp above with the code you wish you had
	    throw new PendingException();
	}

	@When("^La factura no incluye propina.$")
	public void La_factura_no_incluye_propina() throws Throwable {
	    // Express the Regexp above with the code you wish you had
	    throw new PendingException();
	}

}
